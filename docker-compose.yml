services:
  market-app:
    container_name: market-app
    restart: on-failure
    build: ./shop
    ports:
      - "8080:8080"
    environment:
      R2DBC_DATABASE_URL: r2dbc:postgresql://postgres:5432/ya
      JDBC_DATABASE_URL: jdbc:postgresql://postgres:5432/ya
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      REDIS_USER_PASSWORD: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PAYMENT_API_URL: http://payment-service:8082

    networks:
      - market-net
    depends_on:
      - postgres

  payment-service:
    container_name: payment-service
    restart: on-failure
    build: ./payment-service
    ports:
      - "8082:8082"
    networks:
      - market-net

  redis:
    container_name: redis
    image: redis:7.0.11-alpine
    restart: on-failure
    command: redis-server --requirepass redis

    ports:
      - "6380:6379"
    networks:
      - market-net
#    volumes:
#      - postgres-data-new:/var/lib/posgresql/data
#    healthcheck:
#      test: [ "CMD", "pg_isready", "-d", "postgres", "-U", "postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 5s

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ya
    ports:
      - "5433:5432"
    networks:
      - market-net
    volumes:
      - postgres-data-new:/var/lib/posgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "postgres", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  postgres-data-new:
networks:
  market-net: